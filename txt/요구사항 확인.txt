이름 :
시험종류 : <input type="text">
1.
=================
* 문제점 : 중관, 중간, 중간 고사
* 개발범위와 이행방향 :
- 사용자의 입장에서 인터페이스의 편의성을 향상시키는 것과 처리과정에서의 오류 발생빈도를 감소시킬 수 있는 방향성을 제시한다.

표 네개 붙이고(필요없음)
1.
기존 소프트웨어 운영환경이 윈도우즈, 오라클, DBMS, Apache+Tomcat 등의 요구사항에 충죽되어 있기 때문에, 업그레이드 할 소프트웨어도
동일한 요구사항을 적용하도록 한다.

2.
시험의 종류를 마우스 클릭으로 선택, 이로 인한 입력의 불편함이 감소, 오타로 인한 비정상 입력을 방지
사용자의 입장에서 인터페이싀 편의성을 향상, 처리과정에서 오류 발생빈도 감소

3.
요구사항 확인
분석가가 요구사항을 이해했는지 확인(Validation)하는 것이 필요하고, 요구사항 문서가 회
사의 표준에 적합하고 이해 가능하고, 일관성이 있고, 완전한지 검증(Verification)하는 것
이 중요하다. 이해관계자들이 문서를 검토해야 하고, 요구사항 정의 문서들에 대해 형상
관리를 해야 하는데 일반적으로 요구사항 관리 툴을 이용한다. 리소스가 요구사항에 할당
되기 전에 문제를 파악하기 위하여 검증을 수행한다. 1. 요구사항 확인 기법
(1) 요구사항 검토(Requirement Reviews)
(가) 요구사항 검증의 가장 일반적인 방법으로, 여러 검토자들이 에러, 잘못된 가정, 불명확성, 표준과의 차이 등을 찾아내는 작업을 수행하며, 검토자 그룹을 어떻게
구성하느냐가 중요하다.
(나) 예를 들어, 고객 중심 프로젝트에서는 검토자 그룹에 고객 대표자가 1명 이상 포
함되어야 한다.
(다) 검토는 시스템 정의서(System Definition Document), 시스템 사양서(System Specification),
소프트웨어 요구사항 명세서(SRS: Software Requirements Specification Document)
를 완성한 시점 등에서 이루어진다. 

(2) 프로토타이핑(Prototyping)
(가) 프로토타이핑은 새로운 요구사항을 도출하기 위한 수단으로, 또한 소프트웨어 요
구사항에 대해 소프트웨어 엔지니어가 해석한 것을 확인하기 위한 수단으로 많
이 사용된다.
(나) 프로토타이핑의 장점은 분석가의 가정을 파악하고 잘못된 경우 유용한 피드백을
제공한다는 점, 사용자 인터페이스(User Interface)의 동적인 행위가 문서나 그래
픽 모델보다 프로토타입으로 이해하기 쉬운 점, 요구사항의 가변성이 프로토타이
핑 이후에 급격히 감소하는 점이다.
(다) 단점은 사용자의 관심이 핵심 기능에서 멀어지고 프로토타입의 디자인이나 품질
문제로 집중될 수 있으며, 프로토타입 수행 비용이 발생한다는 것이다.
(라) 잘못된 요구사항을 만족시키기 위하여 자원을 낭비하는 것을 방지할 수 있다는
점에서 프로토타이핑을 긍정적으로 검토할 수 있다.
(3) 모델 검증(Model Verification)
(가) 분석단계에서 개발된 모델의 품질을 검증할 필요가 있다.
(나) 예를 들어, 객체 모델의 경우 객체들 사이의 존재하는 의사소통 경로(Communication
Path)를 검증(Verify)하기 위하여 정적 분석(Static Analysis)을 수행하는 것이 유용
하다.
(4) 인수 테스트(Acceptance Tests)
(가) 요구사항의 중요한 속성은 최종 제품이 요구사항을 만족시키는지 확인이 가능해
야 한다는 것이다
(나) 각각의 요구사항을 어떻게 확인할 것인지에 대한 계획을 세워야 한다.


4. 타당성 분석에 대해 설명
요구사항의 기술적 타당성 검토
1. 성능 및 용량산정의 적정성
~내용
2. 시스템 간 상호 운용성
~내용
3. IT 시장 성숙도 및 트렌드 부합성
~내용
4. 기술적 위험 분석
~내용

5. 학생 usecase
사진 붙여넣기

6.
68페이지 <표3-9> 붙여넣기


