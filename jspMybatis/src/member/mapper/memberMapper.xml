<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	
	<sql id="search">
		<choose>
			<when test="search_option == 'id_name_gender'">
				and (id like '%' || #{search_data} || '%' or
					name like '%' || #{search_data} || '%' or
					gender like '%' || #{search_data} || '%')
			</when>
			<when test="search_option != null and search_option != ''
			and search_data != null and search_data != '' ">
				and (${search_option} like '%' || #{search_data} || '%')
			</when>
			<otherwise>
				and no> '0'
			</otherwise>
		</choose>
	</sql>

	<select id="getTotalRecord" resultType="int">
		select count(*) from member where 1=1
		<include refid="search"></include>
	</select>
	
	<select id="getList" resultType="member.model.dto.MemberDTO">
		select * from (select rownum rn, a.* from (
			select no, id, pw, name, gender, bornYear, regi_date from member where 1=1
			<include refid="search"></include>
			order by no desc
		<![CDATA[
				) a) where rn between #{startRecord} and #{endRecord}
		]]>
	</select>
	
	<select id="idCheck" resultType="int">
		select count(id) from member where id=#{id}
	</select>
	
	<insert id="setInsert" parameterType="member.model.dto.MemberDTO">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
	    	select SEQ_member.nextval FROM DUAL
	  	</selectKey>
		insert into member 
		(no, id, pw, name, gender, bornYear, regi_date, postcode, bAddr, sAddr, refAddr)
		values(#{no}, #{id}, #{pw}, #{name}, #{gender}, #{bornYear}, default, #{postcode}, #{bAddr}, #{sAddr}, #{refAddr})
	</insert>
	
	<update id="setUpdate" parameterType="member.model.dto.MemberDTO">
		update member set gender=#{gender}, bornYear=#{bornYear}, postcode=#{postcode},
						bAddr=#{bAddr}, sAddr=#{sAddr}, refAddr=#{refAddr}
		where no=#{no} and pw=#{pw}
	</update>
	
	<delete id="setDelete" parameterType="member.model.dto.MemberDTO">
		delete from member where no=#{no} and pw=#{pw}
	</delete>
	
	<select id="getView" resultType="member.model.dto.MemberDTO">
		select no, id, pw, name, gender, bornYear, regi_date, postcode, bAddr, sAddr, refAddr 
		from member where no=#{no}
	</select>
	
	<select id="getSelect" resultType="member.model.dto.MemberDTO">
		select no, id, pw, name, gender, bornYear, regi_date, postcode, bAddr, sAddr, refAddr 
		from member where id=#{id}
	</select>
	
	<select id="getLogin" resultType="int">
		select count(*)
		from member where id=#{id} and pw=#{pw}
	</select>
	
	<select id="getLoginChk" resultType="int">
		select count(*)
		from member where id=#{id}
	</select>
	
</mapper>

