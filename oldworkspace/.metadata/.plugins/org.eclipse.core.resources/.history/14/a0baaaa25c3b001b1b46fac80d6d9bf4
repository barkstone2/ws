package board;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

public class BoardDAO {
	private Connection conn;
	private PreparedStatement pstmt;
	private ResultSet rs;
	
	public BoardDAO() {
	}
	
	public void getConn() {
		try {
			String driver = "oracle.jdbc.driver.OracleDriver";
			String dbUrl = "jdbc:oracle:thin:@localhost:1521:xe";
			String dbId = "jspMvc1";
			String dbPw = "1234";
			
			Class.forName(driver);
			conn = DriverManager.getConnection(dbUrl, dbId, dbPw);
			System.out.println("오라클 접속 성공");
		}catch(Exception e) {
			System.out.println("오라클 접속 실패");
			e.printStackTrace();
		}
	}
	
	public void quitConn() {
		try {
			if(rs != null) {rs.close();}
			if(pstmt != null) {pstmt.close();}
			if(conn != null) {conn.close();}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	public int setInsert(BoardDTO dto) {
		int max = getMaxNum()+1;
		int refMax = getMaxRefNo()+1;
		int result = 0;
		getConn();
		try {
			String sql = "insert into board values(seq_board.nextval, ?, ?, ?, ?, ?, ?, ?, ?, ?, 0, default)";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, max);
			pstmt.setString(2, dto.getWriter());
			pstmt.setString(3, dto.getSubject());
			pstmt.setString(4, dto.getContent());
			pstmt.setString(5, dto.getEmail());
			pstmt.setString(6, dto.getPw());
			
			if(dto.getStepNo()>1) {
				pstmt.setInt(7, dto.getRefNo());
			}else {
				pstmt.setInt(7, refMax);
			}
			if(dto.getStepNo()==0) {
				pstmt.setInt(8, 1);
				pstmt.setInt(9, 1);
			}else {
				pstmt.setInt(8, dto.getStepNo());
				pstmt.setInt(9, dto.getLevelNo()+1);
			}
			result = pstmt.executeUpdate();
		}catch(Exception e) {
			e.printStackTrace();
		}
		quitConn();
		return result;
	}
	
	public int getNum(String value) {
		getConn();
		int result = 0;
		try {
			String sql = "select max(?) from board";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, value);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				result = rs.getInt(1);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		quitConn();
		return result;
	}
	
	
	
	
	public int getMaxNum() {
		getConn();
		int result = 0;
		try {
			String sql = "select max(num) from board";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				result = rs.getInt(1);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		quitConn();
		return result;
	}
	
	public int getMaxRefNo() {
		getConn();
		int result = 0;
		try {
			String sql = "select max(refNo) from board";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				result = rs.getInt(1);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		quitConn();
		return result;
	}
	
	
	public ArrayList<BoardDTO> getListAll() {
		ArrayList<BoardDTO> list = new ArrayList<>();
		getConn();
		try {
			String sql = "";
			sql = "select * from board order by refno asc, levelno desc";
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			while(rs.next()) {
				BoardDTO dto = new BoardDTO();
				dto.setRowNum(rs.getRow());
				dto.setNo(rs.getInt("no"));
				dto.setNum(rs.getInt("num"));
				dto.setWriter(rs.getString("writer"));
				dto.setSubject(rs.getString("subject"));
				dto.setContent(rs.getString("content"));
				dto.setEmail(rs.getString("email"));
				dto.setPw(rs.getString("pw"));
				dto.setRefNo(rs.getInt("refNo"));
				dto.setStepNo(rs.getInt("stepNo"));
				dto.setLevelNo(rs.getInt("levelNo"));
				dto.setHit(rs.getInt("hit"));
				dto.setRegiDate(rs.getDate("regiDate"));
				list.add(dto);
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		quitConn();
		return list;
	}
	
	public BoardDTO getSelect(int no) {
		getConn();
		BoardDTO dto = new BoardDTO();
		try {
			String sql = "select no, num, writer, subject,"
					+ "(SELECT REPLACE(content, CHR(13)||CHR(10), '<br>') from board where no=?) as content"
					+ ",email,pw,refNo,stepNo,levelNo,hit,regiDate from board where no=?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, no);
			pstmt.setInt(2, no);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				dto.setRowNum(rs.getRow());
				dto.setNo(rs.getInt("no"));
				dto.setNum(rs.getInt("num"));
				dto.setWriter(rs.getString("writer"));
				dto.setSubject(rs.getString("subject"));
				dto.setContent(rs.getString("content"));
				dto.setEmail(rs.getString("email"));
				dto.setPw(rs.getString("pw"));
				dto.setRefNo(rs.getInt("refNo"));
				dto.setStepNo(rs.getInt("stepNo"));
				dto.setLevelNo(rs.getInt("levelNo"));
				dto.setHit(rs.getInt("hit"));
				dto.setRegiDate(rs.getDate("regiDate"));
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
		quitConn();
		return dto;
	}
	
	public int setUpdate(BoardDTO dto) {
		int result = 0;
		getConn();
		try {
			String sql = "update board set subject=?, content=?, email=? where no=?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, dto.getSubject());
			pstmt.setString(2, dto.getContent());
			pstmt.setString(3, dto.getEmail());
			pstmt.setInt(4, dto.getNo());
			result = pstmt.executeUpdate();
		}catch(Exception e) {
			e.printStackTrace();
		}
		quitConn();
		return result;
	}
	
	public int setDelete(int no) {
		getConn();
		int result = 0;
		try {
			String sql = "delete from board where no=?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, no);
			result = pstmt.executeUpdate();
		}catch(Exception e) {
			e.printStackTrace();
		}
		quitConn();
		return result;
	}//setDelete() End
	
	public void setHit(int no) {
		getConn();
		try {
			String sql = "update board set hit=(hit+1) where no=?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, no);
			pstmt.executeUpdate();
		}catch(Exception e) {
			e.printStackTrace();
		}
		quitConn();
	}
	
	public void setLevelNo(int levelNo) {
		getConn();
		try {
			String sql = "update board set levelNo=(levelNo+1) where levelNo > ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, levelNo);
			pstmt.executeUpdate();
		}catch(Exception e) {
			e.printStackTrace();
		}
		quitConn();
	}
}
