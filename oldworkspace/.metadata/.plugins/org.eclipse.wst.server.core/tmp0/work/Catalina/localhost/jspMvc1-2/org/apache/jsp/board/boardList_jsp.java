/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.40
 * Generated at: 2020-12-11 07:32:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.BoardDTO;
import java.util.ArrayList;
import board.BoardDAO;

public final class boardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("board.BoardDAO");
    _jspx_imports_classes.add("board.BoardDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시글 목록</title>\r\n");
      out.write("<style>\r\n");
      out.write(".bdlAlign {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("a {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tcolor: blue;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h2>게시글 목록</h2>\r\n");
      out.write("\t\t<table width=\"800\" border=\"1\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td class=\"bdlAlign\">글번호</td>\r\n");
      out.write("\t\t\t\t<td width=\"400\" class=\"bdlAlign\">제목</td>\r\n");
      out.write("\t\t\t\t<td class=\"bdlAlign\">작성자</td>\r\n");
      out.write("\t\t\t\t<td class=\"bdlAlign\">작성일</td>\r\n");
      out.write("\t\t\t\t<td class=\"bdlAlign\">조회수</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				BoardDAO dao = new BoardDAO();
				ArrayList<BoardDTO> list = dao.getListAll();
				
				int pageNum = 1;
				try{
					String pageNum_ = request.getParameter("pageNum");
					pageNum = Integer.parseInt(pageNum_);
				}catch(Exception e){
				}
				int maxCon = 10;
				int count = 1;
				int pageCount = (int)Math.ceil(list.size()/(double)maxCon);
				for(int i=list.size()-1-((pageNum-1)*maxCon); i>=0; i--){
					if(count>maxCon){
						count = 1;
						break;
					}else{
						count++;
						BoardDTO dto = list.get(i);
			
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"bdlAlign\" height=>");
      out.print(dto.getRowNum() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t");

							if(dto.getStepNo()>1){
								for(int k=1; k<dto.getStepNo(); k++){
									out.print("&nbsp;&nbsp;");
								}
							}
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<a href=\"view.jsp?no=");
      out.print(dto.getNo());
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(dto.getSubject() );
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"bdlAlign\">");
      out.print(dto.getWriter() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"bdlAlign\">");
      out.print(dto.getRegiDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td class=\"bdlAlign\">");
      out.print(dto.getHit() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t");
			}
				}
				if(list.size()==0){
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr align=\"center\">\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"5\" height=\"400px\">등록된 내용이 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
}
		
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t<div style=\"text-align: center; width:800px;\">\r\n");
      out.write("\t");

		int navNum = 1;
		try{
			String navNum_ = request.getParameter("navNum");
			navNum = Integer.parseInt(navNum_);
		}catch(Exception e){
		}
		int maxNavNum = 3;
		int navCount = (int)Math.ceil(pageCount/(double)maxNavNum);
		int count2 = 1;
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t<a href=\"#\" onclick=\"navMove('P');\"><<</a>&nbsp;\r\n");
      out.write("\t\t");
for(int i=((navNum-1)*maxNavNum)+1; i<=pageCount; i++){
			if(count2>maxNavNum){
				count2 = 1;
				break;
			}else{
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"#\" onclick=\"pageMove('");
      out.print(i);
      out.write("');\">");
      out.print(i );
      out.write("</a>&nbsp;\r\n");
      out.write("\t\t");
}
			count2++;
		}
      out.write("\r\n");
      out.write("\t\t<a href=\"#\" onclick=\"navMove('N');\">>></a>&nbsp;\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div style=\"width:800px; display: flex; justify-content: flex-end;\">\r\n");
      out.write("\t\t<a href=\"write.jsp\">[글쓰기]</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction pageMove(value1){\r\n");
      out.write("\t\tlocation.href='boardList.jsp?pageNum='+value1+'&navNum=");
      out.print(navNum);
      out.write("';\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction navMove(value1){\r\n");
      out.write("\t\tif(value1=='P'){\r\n");
      out.write("\t\t\tif(");
      out.print(navNum);
      out.write("==1){\r\n");
      out.write("\t\t\t\talert('첫 페이지입니다.');\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tlocation.href='boardList.jsp?navNum=");
      out.print(navNum-1);
      out.write("&pageNum=");
      out.print(pageNum);
      out.write("';\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tif(");
      out.print(navNum);
      out.write('=');
      out.write('=');
      out.print(navCount);
      out.write("){\r\n");
      out.write("\t\t\t\talert('마지막 페이지입니다.');\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\tlocation.href='boardList.jsp?navNum=");
      out.print(navNum+1);
      out.write("&pageNum=");
      out.print(pageNum);
      out.write("';\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
